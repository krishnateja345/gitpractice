--07072024
-----Oracle sql practice exercises with solutions-----------

create table snocols
(
sno int,
col1 varchar(2),
col2 varchar(2),
col3 varchar(2),
col4 varchar(2),
col5 varchar(2)
);

insert into snocols values(1,'A','B','C','D','E');
insert into snocols values(2,null,'A','B','C','D');
insert into snocols values(3,'E',null,null,null,'A');
insert into snocols values(4,null,'A','E',null,'D');
insert into snocols values(5,'E','D','C','B',null);
commit;



--basic
select * from snocols where col1='A' or col2='A' or col3='A' or col4='A' or col5='A';

select * from snocols where col1='A'
union all
select * from snocols where col2='A'
union all
select * from snocols where col3='A'
union all
select * from snocols where col4='A'
union all
select * from snocols where col5='A';

--advanced
select * from snocols where 'A' in(col1,col2,col3,col4,col5);

select * from snocols where col1||col2||col3||col4||col5 like '%A%';

select * from snocols where instr(col1||col2||col3||col4||col5,'A')>0;

----------------------------end-----------------------------------------------------

--10102024
--Oracle sql practice exercise with solution and Practical Interview question

select * from emp;

select * from dept;

--correlated query
select empno,ename,a.deptno,sal from emp a
where sal>(select avg(sal) avg_sal from emp b 
           where b.deptno=a.deptno 
           group by b.deptno);
           
--Inline view 1
select a.empno,a.ename,a.deptno,a.sal,b.avg_sal 
from emp a,(select round(avg(sal)) avg_sal,deptno from emp
group by deptno) b where b.deptno=a.deptno and a.sal>b.avg_sal
order by a.empno;

--Inline view 2
select * from 
(
select a.empno,a.ename,a.deptno,a.sal, 
       (select round(avg(sal)) avg_sal from emp b
        where b.deptno=a.deptno) avg_sal
from emp a ) where sal>avg_sal
order by empno;

--analytical function
select * from 
        (
        select empno,ename,deptno,sal,
               round(avg(sal) over(partition by deptno order by deptno)) avg_sal
        from 
        emp
        )where sal>avg_sal order by empno;
        

--Using Function
create or replace function get_avgsal(p_deptno int)
return number
as
v_avg_sal number;
begin
select trunc(avg(sal)) into v_avg_sal from emp where deptno=p_deptno;
return v_avg_sal;
end;
/

select empno,ename,sal,get_avgsal(deptno) avgsal 
from emp 
where sal>get_avgsal(deptno);


-------------------------end------------------------------------

--11102024
--Oracle SQL Practical question with answer Write a SQL to print Cricket Dashboard
--using with CTE
select * from cricket;

with t1 as
(
select team,
       count(*) matches_played 
from
    (
    select team_a team from cricket
    union all
    select team_b from cricket
    )
group by team),
t2 as
(
select winner team,
       count(*) matches_won 
from cricket
group by winner)
select t1.team,
       t1.matches_played,
       nvl(t2.matches_won,0) matches_won,
       t1.matches_played-nvl(t2.matches_won,0) matches_lost
from t1 left outer join t2 on t1.team=t2.team
order by t1.team;

--using function

select * from cricket;

create or replace function matchesplayed(p_team char)
return number
as 
v_matches_played number;
begin
select count(*) into v_matches_played
from cricket 
where team_a=p_team or team_b=p_team;
return v_matches_played;
end;
/

create or replace function matcheswon(p_team char)
return number
as 
v_matches_won number;
begin
select count(*) into v_matches_won
from cricket 
where winner=p_team;
return v_matches_won;
end;
/

select matchesplayed('INDIA') from dual;

select team,
       matchesplayed(team) matches_played,
       matcheswon(team) matches_won,
       matchesplayed(team)-matcheswon(team) matches_lost
from
(
select distinct team
from
(
select team_a team from cricket
union all
select team_b from cricket
)) order by team;

-----------------------------end----------------------------------------------------

--13102024
--QUERY TO FIND THE DATA FROM TAB1 WHICH IS NOT PRESENT IN TAB2
select * from tab1;

select * from tab2;

--Basic
select * from tab1 where c1 not in(select * from tab2);

select * from tab1 where not exists(select * from tab2 where tab2.c1=tab1.c1);

--Advanced
select tab1.c1 from tab1 left outer join tab2 on tab1.c1=tab2.c1
where tab2.c1 is null;

select * from tab1 where 1>(select count(*) from tab2 where tab1.c1=tab2.c1);

select * from tab1 where (select count(*) from tab2 where tab1.c1=tab2.c1)=0;

select * from tab1 
minus 
select * from tab2;

--------------END----------------------------------------------------------

--14102024
--Generating Sequence Numbers

select rownum,e.* from emp e;

select rownum,d.* from dual d;

select rownum from dual
connect by level<=10;

with t1(id) as
(select 1 id from dual
union all
select id+1 from t1
where id<20
)
select * from t1;

select rownum from
(
select 1 from dual
group by cube(1,2,3,4))
where rownum<=10;

select rownum from xmltable( '1 to 10' );

------------------------------end---------------------------------

--15102024
--query to print the given string in different patterns
with ds as
(
select 'WELCOME' str from dual
)
select str,
       substr(str,level,1) rstr1,
       substr(str,level*-1,1) rstr2,
       substr(str,1,level) rstr3,
       substr(str,level) rstr4,
       rpad(' ',level+1,' ')||substr(str,level) rstr5,
       rpad(' ',length(str)-level,' ')||substr(str,1,level) rstr6
from ds connect by level<=length(str);
------------------------------------end---------------------------------------------

--16102024
----------Oracle SQL Practical question with answer extract names from mail id using SQL function
with ds as
(
select 'krishna.teja.345@gmail.com' m from dual
),
t1 as(select m,
        instr(m,'@') mdot,
        substr(m,instr(m,'@')+1) domain,
        substr(m,1,instr(m,'@')-1) name,
        instr(m,'.',1,1) fdot,
        instr(m,'.',1,2) sdot
from ds)
select m,name, 
       substr(name,1,fdot-1) fname,
       substr(name,fdot+1,sdot-fdot-1) mname,
       substr(name,sdot+1,mdot-sdot-1) lname,
       domain
from t1;

----------------------------------end------------------------------------------

---17102024
--Oracle SQL Practical question with answer extract names from mail id using SQL function

with ds as
(
select mail_name m from mail_det1
),
t1 as(select m, 
         substr(m,1,instr(m,'@',1,1)-1) n,
         substr(m,instr(m,'@',1,1)+1) dname,
         instr(m,'@',1,1) mdot,
         instr(substr(m,1,instr(m,'@',1,1)-1),'.',1,1) fdot,
         instr(substr(m,1,instr(m,'@',1,1)-1),'.',1,2) sdot
from ds)
select m,n,--mdot,fdot,sdot,
       decode(fdot,0,substr(n,1,length(n)),substr(n,1,fdot-1)) fname,
       decode(sdot,0,null,substr(n,fdot+1,sdot-fdot-1)) mname,
       decode(fdot+sdot,0,null,decode(sdot,0,substr(n,fdot+1),substr(n,sdot+1))) lname,
       dname
from t1;

--test cases
select * from mail_det1;

insert into mail_det1 values('acer.123@gmail.com');
insert into mail_det1 values('eshwarkrishna@hotmail.com');
insert into mail_det1 values('a.b.c@gmail.com');
------------------------------------end-----------------------------------------------

--21102024
--Oracle SQL Practical question with answer calculate the group salary

--Using Query(Inline)

select EMPNO, ENAME,  MGR,  SAL from emp;

select --sum(sal)
sys_connect_by_path(ename,'-->'),
sys_connect_by_path(empno,'-->')
from emp
connect by prior empno=mgr
start with ename='MILLER';

select EMPNO, ENAME,  MGR,  SAL,
       (select sum(sal)
        from emp i
        connect by prior empno=mgr
        start with ename=o.ename) grp_Sal
from emp o;

--Using Function
create or replace function get_group_sal(p_ename char)
return number
as
v_grp_sal number;
begin
        select sum(sal) into v_grp_sal
        from emp i
        connect by prior empno=mgr
        start with ename=p_ename;
return v_grp_sal;
end;
/

select get_group_sal('JONES') from dual;

select empno,ename,sal,get_group_sal(ename) grp_sal
from emp;

-----------------end-----------------------------------------------------------------

--22102024
--Oracle SQL Practical question with answer Compute Student Result Dashboard
--Dept on Y-Axis and Year on X-Axis
select dept,
       max(case when year=1 then cnt end) I,
       max(case when year=2 then cnt end) II,
       max(case when year=3 then cnt end) III,
       max(case when year=4 then cnt end) IV
from
(
select dept,year,--count(*),
       'P='||count(case when result='P' then result end)||
       ',F='||count(case when result='F' then result end) cnt
from students
group by dept,year
order by dept,year
)group by dept;

--Dept on X-Axis and Year on Y-Axis
select year,
       max(case when dept='EEE' then cnt end) EEE,
       max(case when dept='CSE' then cnt end) CSE,
       max(case when dept='CVE' then cnt end) CVE,
       max(case when dept='MECH' then cnt end) MECH,
       max(case when dept='ECE' then cnt end) ECE
from
(
select dept,year,--count(*),
       'P='||count(case when result='P' then result end)||
       ',F='||count(case when result='F' then result end) cnt
from students
group by dept,year
order by dept,year
)group by year
order by year;


--Using Functions

create or replace function get_year_x_axis(p_dname char,p_year int)
return char
as
v_p_f_count varchar(100);
begin
select 
       'P='||count(case when result='P' then result end)||
       ',F='||count(case when result='F' then result end) into v_p_f_count
from students
where dept=p_dname and year=p_year;
return v_p_f_count;
end;
/


select dept, GET_YEAR_X_AXIS(dept,1) I,
             GET_YEAR_X_AXIS(dept,2) II,
             GET_YEAR_X_AXIS(dept,3) III,
             GET_YEAR_X_AXIS(dept,4) IV
from (select distinct dept from students);


--Using Function

create or replace function get_year_y_axis(p_dname char,p_year int)
return char
as
v_p_f_count varchar(100);
begin
select 
       'P='||count(case when result='P' then result end)||
       ',F='||count(case when result='F' then result end) into v_p_f_count
from students
where dept=p_dname and year=p_year;
return v_p_f_count;
end;
/


select year, GET_YEAR_Y_AXIS('ECE',year) ECE,
             GET_YEAR_Y_AXIS('EEE',year) EEE,
             GET_YEAR_Y_AXIS('CSE',year) CSE,
             GET_YEAR_Y_AXIS('CVE',year) CVE,
             GET_YEAR_Y_AXIS('MECH',year) MECH
from (select distinct year from students)
order by year;

--Using Pivot Year on X-Axis

select * from 
(
select dept,year,--count(*),
       'P='||count(case when result='P' then result end)||
       ',F='||count(case when result='F' then result end) cnt
from students
group by dept,year
order by dept,year)pivot(max(cnt) for year in(1 I,2 II,3 III,4 IV));

--Using Pivot Year on Y-Axis

select * from 
(
select dept,year,--count(*),
       'P='||count(case when result='P' then result end)||
       ',F='||count(case when result='F' then result end) cnt
from students
group by dept,year
order by dept,year)pivot(max(cnt) for dept in('EEE' EEE,'CSE' CSE,'CVE' CVE,'MECH' MECH,'ECE' ECE));

----------------------------------------------------end-----------------------------------------------------------------------------