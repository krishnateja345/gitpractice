---------------24-05-2024---------------------------------
select * from v$version;

select * from v$sql;

select * from all_tables where owner='SYSTEM' and tablespace_name='SYSTEM';

--Problem#1
--Query to get the result which contains 'A' in any of the columns
--You should not use OR Keyword
select * from pract_01;

select * from pract_01 where 'A' in(col1,col2,col3,col4,col5);

select * from pract_01 where col1='A'
union 
select * from pract_01 where col2='A'
union
select * from pract_01 where col3='A'
union 
select * from pract_01 where col4='A'
union
select * from pract_01 where col5='A';

select * from pract_01 where col1||col2||col3||col4||col5 like '%A%';

select * from pract_01 where instr(col1||col2||col3||col4||col5 ,'A')>0;


--Problem#2
--Query to select the employees list who are getting more than average salary
--of the department that are working in
select * from emp;
---Using INLINE VIEW
select empno,ename,a.deptno,sal--,b.avgsal 
from emp a,(select deptno,round(avg(sal)) avgsal from emp
            group by deptno) b
where a.sal>b.avgsal and a.deptno=b.deptno;

--Using CORELATED VIEW
select empno,ename,a.deptno,sal from 
emp a where a.sal>(select avg(sal) from emp b 
                   where b.deptno=a.deptno
                   );
                   
--Using Analytical Function
select EMPNO, ENAME, DEPTNO, SAL from 
(
select empno,ename,deptno,sal,
       trunc(avg(sal) over(partition by deptno)) avgsal
from emp)
where sal>avgsal;

--Using Function
create or replace function get_avg_sal(in_deptno number)
return number
as
v_avg_sal number;
begin
select trunc(avg(sal)) into v_avg_sal from emp
where deptno=in_deptno;
return v_avg_sal;
end;

select get_avg_sal(10) from dual;

select empno,ename,deptno,sal from emp
where sal>get_avg_sal(deptno);
                   
----end-----------------------------------------------------------

-----------------27-05-2024 Script to find the records from tab1 which are not in tab2----
--using NOT IN
select * from tab1 where c1 not in (select * from tab2);

--using NOT EXISTS
select * from tab1 where not exists(select * from tab2 where tab2.c1=tab1.c1);

--using MINUS
select * from tab1
minus
select * from tab2;

--using LEFT OUTER JOIN
select tab1.c1 from tab1 left outer join tab2 on tab2.c1 = tab1.c1
where tab2.c1 is null;

--using OTHER POSSIBILITIES
select * from tab1 where 1>(select count(*) from tab2 where tab1.c1=tab2.c1);

select * from tab1 where (select count(*) from tab2 where tab1.c1=tab2.c1)<1;

---------------Script to generate Cricket Dashboard--------

with t1 as (select  team_name,count(*) matches_played from (
            select team_a team_name from cricket
            union all
            select team_b from cricket)
            group by team_name),
     t2 as (
            select winner,count(*) matches_won from cricket
            group by winner
            )
select TEAM_NAME, 
       MATCHES_PLAYED, 
       nvl(MATCHES_WON,0) MATCHES_WON ,
       MATCHES_PLAYED-nvl(MATCHES_WON,0) MATHCES_LOST
from t1 left outer join t2 on t1.team_name=t2.winner;

select winner,count(*) matches_won from cricket
group by winner;

-----Function to generate Cricket Board
create or replace function matches_played(in_team_name varchar)
return number
as
v_matches_played number;
begin
            select count(*) into v_matches_played from cricket
            where team_a=in_team_name or team_b=in_team_name;
return v_matches_played;
end matches_played;
/

create or replace function matches_won(in_winner varchar)
return number
as
v_matches_won number;
begin
            select count(*) into v_matches_won from cricket
            where winner=in_winner;
return v_matches_won;
end matches_won;
/

select team_name,
       matches_played(team_name) matches_played,
       matches_won(team_name) matches_won,
       matches_played(team_name)-matches_won(team_name) matches_lost
from
(
select team_a team_name from cricket
union
select team_b from cricket);

----------------end  27-05-2024-------------------------------------------------

-----28-05-2024  Oracle sql practice exercise with solution | SQL query to print sequence of numbers

select rownum,e.* from emp e;

select rownum rn from dual
connect by level<=10;

select level l from dual
connect by level<=10;


with t1(id) as
(select 1 id from dual
union all
select id+1 from t1 where id<10
)
select id from t1;

select rownum sno from
(select 1 from dual
group by cube(1,2,3,4))
where rownum<=10;

select rownum sno from xmltable(' 1 to 10 ');

----Oracle sql practice exercise with solution | SQL query to print string in row of characters |PYRAMID

with ds as
(select 'WELCOME' str from dual)
select level l,
       str,
       substr(str,level,1) a,
       substr(str,level*-1,1) b,
       substr(str,1,level) c,
       substr(str,level) d ,
       rpad(' ',level,' ')||substr(str,level) e,
       rpad(' ',length(str)+1-level,' ')||substr(str,1,level) f
from ds
connect by level<=length(str);

------------------end 28-05-2024----------------------

