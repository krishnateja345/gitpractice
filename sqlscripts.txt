-----------------Query to generate the Cricket Match Board------------------

with 
ds1 as      (select TEAM_A teams from cricket
             union all
             select TEAM_B from cricket),
ds2 as      (select teams,count(*) matches_played from ds1
             group by teams),
ds3 as      (select winner,count(*) matches_won from cricket
             group by winner)
select ds2.teams,ds2.matches_played,nvl(ds3.matches_won,0) matches_won,
       (ds2.matches_played-nvl(ds3.matches_won,0)) matches_lost
from ds2 left outer join ds3 on ds2.teams=ds3.winner
order by ds2.teams;

select winner,count(*) matches_won from cricket
group by winner;

---------------------end----------------------------------

-----------------------05-04-2024--------------------------------------

select level from dual
connect by level<=10;


with t1(id) as
(select 1 id from dual
union all
select id+1 from t1
where id<10) select id from t1;

select rownum from
(
select 1 from dual
group by cube(1,2,3)
) where rownum<=5;


select rownum from xmltable('1 to 10');


select str,
       substr(str,level,1) str1,
       substr(str,length(str)+1-level,1) str2,
       substr(str,1,level) str3,
       substr(str,level) str4,
       rpad(' ',level,' ')||substr(str,level) str5,
       rpad(' ',length(str)+1-level,' ')||substr(str,1,level) str6,
       length(str) ln
from(
     select 'WELCOME' str from dual
     )
connect by level<=length(str);

select rpad('tech',7,'*') from dual;

select 'tech' from dual;

-----------------------------------------end------------------------------------

--------------------------------------06-04-2024-----------------------------------------------

with ds1 as
(
select mail_name m from mail_det --where rownum=1
),
ds2 as (select m,
       instr(m,'.',1,1) fdot ,
       instr(m,'.',1,2) sdot,
       instr(m,'@',1) pos
from ds1)
select M, --FDOT, SDOT, POS,
       substr(m,1,fdot-1) first_name,
       substr(m,fdot+1,sdot-fdot-1) middle_name,
       substr(m,sdot+1,pos-sdot-1) Last_name,
       substr(m,pos+1) domain_name
from ds2;

insert into mail_det values('a.b.c@gmail.com');
insert into mail_det values('abc.bc.cdef@gmail.com');
commit;



with ds1 as
(
select mail_name m from mail_det1 --where rownum=1
),
ds2 as (select m,
       --instr(m,'.',1,1) fdot ,
       --instr(m,'.',1,2) sdot,
       instr(m,'@',1) pos
       from ds1),
ds3 as (select M, --FDOT, SDOT, POS, 
       substr(m,1,pos-1) n,
       substr(m,pos+1) d,
       instr(substr(m,1,pos-1),'.',1,1) fdot,
       instr(substr(m,1,pos-1),'.',1,2) sdot
       from ds2)
select M, --N,  FDOT, SDOT,
       /*decode(fdot,0,substr(n,1),substr(n,1,fdot-1)) fname,
       decode(sdot,0,null,substr(n,fdot+1,sdot-fdot)) mname,
       decode(fdot+sdot,0,null,substr(n,sdot)) lname*/
       substr(n,1,decode(fdot,0,length(n),fdot-1)) fname,
       decode(sdot,0,null,substr(n,fdot+1,sdot-fdot-1)) mname,
       decode(fdot+sdot,0,null,substr(n,decode(sdot,0,fdot,sdot)+1)) lname,
       D dname
from ds3;
-------------------------------------------------end----------------------------------------------------
----------------------------07-04-2024--------------------------------------------------------
select empno,ename,sal from emp;
-------------Oracle SQL Practical question with answer calculate the group salary-----
select empno,ename,mgr,
       sys_connect_by_path(ename,'->') lename
from emp
start with mgr is null
connect by prior empno=mgr;


select empno,ename,mgr,sal,
       sys_connect_by_path(ename,'->') lename
from emp
start with ename='BLAKE'
connect by prior empno=mgr;

select empno,ename,sal,(select sum(sal) grpsal
            from emp
            start with ename=a.ename
            connect by prior empno=mgr) grpsal
from emp a;

-------------inline view to find the emp sal greater than avg salary------------------
select empno,ename,sal,a.deptno from emp a,
       (select b.deptno,avg(b.sal) avgsal from emp b 
        group by b.deptno
        ) c
where a.deptno=c.deptno and a.sal>c.avgsal;

----------------corelated query to find the emp sal greater than avg salary----------------
select a.empno,a.ename,a.sal,a.deptno from emp a
where sal>(select avg(sal) from emp b
           where b.deptno=a.deptno
           group by b.deptno);



--select * from students;

select DEPT, --CNT, RES, 
       max(case when year=1 then res end) I_year,
       max(case when year=2 then res end) II_year,
       max(case when year=3 then res end) III_year,
       max(case when year=4 then res end) IV_year
from 
            (
            select dept,year,count(result) cnt,
                   'P='||count(case when result='P' then result else null end)||
                   ',F='||count(case when result='F' then result else null end) res
            from students
            group by dept,year)
group by dept;




--select * from students;

select year, --CNT, RES, 
       max(case when dept='EEE' then res end) EEE,
       max(case when dept='CSE' then res end) CSE,
       max(case when dept='CVE' then res end) CVE,
       max(case when dept='MECH' then res end) MECH,
	   max(case when dept='ECE' then res end) ECE
	   
from 
            (
            select dept,year,count(result) cnt,
                   'P='||count(case when result='P' then result else null end)||
                   ',F='||count(case when result='F' then result else null end) res
            from students
            group by dept,year)
group by year;






-----using pivot-----------

select * from
(
select dept,year,--count(result) cnt,
                   'P='||count(case when result='P' then result else null end)||
                   ',F='||count(case when result='F' then result else null end) res
            from students
            group by dept,year
            order by year)
pivot(max(res) for dept in('EEE','ECE','CSE','CVE','MECH'))
order by year;

select * from
(
select dept,year,--count(result) cnt,
                   'P='||count(case when result='P' then result else null end)||
                   ',F='||count(case when result='F' then result else null end) res
            from students
            group by dept,year
            order by year)
pivot(max(res) for year in(1 as I_year,2 as II_year,3 as III_year,4 as IV_year))
order by dept;
-------------------------------------------end----------------------------------------------------